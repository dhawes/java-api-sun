call javaapi#namespace('com.sun.org.apache.xerces.internal.impl')

call javaapi#class('ArrayEnumeration', 'Enumeration', [
  \ javaapi#method(0,'ArrayEnumeration(', 'Object[])', 'public'),
  \ javaapi#method(0,'hasMoreElements(', ')', 'boolean'),
  \ javaapi#method(0,'nextElement(', ')', 'Object'),
  \ ])

call javaapi#class('Constants', '', [
  \ javaapi#field(1,'NS_XMLSCHEMA', 'String'),
  \ javaapi#field(1,'NS_DTD', 'String'),
  \ javaapi#field(1,'SUN_SCHEMA_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,'SUN_REPORT_IGNORED_ELEMENT_CONTENT_WHITESPACE', 'String'),
  \ javaapi#field(1,'ZEPHYR_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,'STAX_PROPERTIES', 'String'),
  \ javaapi#field(1,'STAX_ENTITY_RESOLVER_PROPERTY', 'String'),
  \ javaapi#field(1,'STAX_REPORT_CDATA_EVENT', 'String'),
  \ javaapi#field(1,'READER_IN_DEFINED_STATE', 'String'),
  \ javaapi#field(1,'ADD_NAMESPACE_DECL_AS_ATTRIBUTE', 'String'),
  \ javaapi#field(1,'ESCAPE_CHARACTERS', 'String'),
  \ javaapi#field(1,'REUSE_INSTANCE', 'String'),
  \ javaapi#field(1,'SUN_DOM_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,'SUN_DOM_ANCESTOR_CHECCK', 'String'),
  \ javaapi#field(1,'IGNORE_EXTERNAL_DTD', 'String'),
  \ javaapi#field(1,'SAX_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,'NAMESPACES_FEATURE', 'String'),
  \ javaapi#field(1,'NAMESPACE_PREFIXES_FEATURE', 'String'),
  \ javaapi#field(1,'STRING_INTERNING_FEATURE', 'String'),
  \ javaapi#field(1,'VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,'EXTERNAL_GENERAL_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,'EXTERNAL_PARAMETER_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,'LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,'IS_STANDALONE_FEATURE', 'String'),
  \ javaapi#field(1,'RESOLVE_DTD_URIS_FEATURE', 'String'),
  \ javaapi#field(1,'USE_ATTRIBUTES2_FEATURE', 'String'),
  \ javaapi#field(1,'USE_LOCATOR2_FEATURE', 'String'),
  \ javaapi#field(1,'USE_ENTITY_RESOLVER2_FEATURE', 'String'),
  \ javaapi#field(1,'UNICODE_NORMALIZATION_CHECKING_FEATURE', 'String'),
  \ javaapi#field(1,'XMLNS_URIS_FEATURE', 'String'),
  \ javaapi#field(1,'XML_11_FEATURE', 'String'),
  \ javaapi#field(1,'ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE', 'String'),
  \ javaapi#field(1,'SAX_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,'DECLARATION_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,'LEXICAL_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,'DOM_NODE_PROPERTY', 'String'),
  \ javaapi#field(1,'XML_STRING_PROPERTY', 'String'),
  \ javaapi#field(1,'FEATURE_SECURE_PROCESSING', 'String'),
  \ javaapi#field(1,'DOCUMENT_XML_VERSION_PROPERTY', 'String'),
  \ javaapi#field(1,'JAXP_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,'SCHEMA_SOURCE', 'String'),
  \ javaapi#field(1,'SCHEMA_LANGUAGE', 'String'),
  \ javaapi#field(1,'SYSTEM_PROPERTY_ELEMENT_ATTRIBUTE_LIMIT', 'String'),
  \ javaapi#field(1,'INCLUDE_COMMENTS_FEATURE', 'String'),
  \ javaapi#field(1,'CREATE_CDATA_NODES_FEATURE', 'String'),
  \ javaapi#field(1,'LOAD_AS_INFOSET', 'String'),
  \ javaapi#field(1,'DOM_CANONICAL_FORM', 'String'),
  \ javaapi#field(1,'DOM_CDATA_SECTIONS', 'String'),
  \ javaapi#field(1,'DOM_COMMENTS', 'String'),
  \ javaapi#field(1,'DOM_CHARSET_OVERRIDES_XML_ENCODING', 'String'),
  \ javaapi#field(1,'DOM_DATATYPE_NORMALIZATION', 'String'),
  \ javaapi#field(1,'DOM_ENTITIES', 'String'),
  \ javaapi#field(1,'DOM_INFOSET', 'String'),
  \ javaapi#field(1,'DOM_NAMESPACES', 'String'),
  \ javaapi#field(1,'DOM_NAMESPACE_DECLARATIONS', 'String'),
  \ javaapi#field(1,'DOM_SUPPORTED_MEDIATYPES_ONLY', 'String'),
  \ javaapi#field(1,'DOM_VALIDATE_IF_SCHEMA', 'String'),
  \ javaapi#field(1,'DOM_VALIDATE', 'String'),
  \ javaapi#field(1,'DOM_ELEMENT_CONTENT_WHITESPACE', 'String'),
  \ javaapi#field(1,'DOM_DISCARD_DEFAULT_CONTENT', 'String'),
  \ javaapi#field(1,'DOM_NORMALIZE_CHARACTERS', 'String'),
  \ javaapi#field(1,'DOM_CHECK_CHAR_NORMALIZATION', 'String'),
  \ javaapi#field(1,'DOM_WELLFORMED', 'String'),
  \ javaapi#field(1,'DOM_SPLIT_CDATA', 'String'),
  \ javaapi#field(1,'DOM_FORMAT_PRETTY_PRINT', 'String'),
  \ javaapi#field(1,'DOM_XMLDECL', 'String'),
  \ javaapi#field(1,'DOM_UNKNOWNCHARS', 'String'),
  \ javaapi#field(1,'DOM_CERTIFIED', 'String'),
  \ javaapi#field(1,'DOM_DISALLOW_DOCTYPE', 'String'),
  \ javaapi#field(1,'DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS', 'String'),
  \ javaapi#field(1,'DOM_RESOURCE_RESOLVER', 'String'),
  \ javaapi#field(1,'DOM_ERROR_HANDLER', 'String'),
  \ javaapi#field(1,'DOM_SCHEMA_TYPE', 'String'),
  \ javaapi#field(1,'DOM_SCHEMA_LOCATION', 'String'),
  \ javaapi#field(1,'DOM_ANCESTOR_CHECCK', 'String'),
  \ javaapi#field(1,'DOM_PSVI', 'String'),
  \ javaapi#field(1,'XERCES_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,'SCHEMA_VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,'SCHEMA_NORMALIZED_VALUE', 'String'),
  \ javaapi#field(1,'SCHEMA_ELEMENT_DEFAULT', 'String'),
  \ javaapi#field(1,'SCHEMA_FULL_CHECKING', 'String'),
  \ javaapi#field(1,'SCHEMA_AUGMENT_PSVI', 'String'),
  \ javaapi#field(1,'DYNAMIC_VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,'WARN_ON_DUPLICATE_ATTDEF_FEATURE', 'String'),
  \ javaapi#field(1,'WARN_ON_UNDECLARED_ELEMDEF_FEATURE', 'String'),
  \ javaapi#field(1,'WARN_ON_DUPLICATE_ENTITYDEF_FEATURE', 'String'),
  \ javaapi#field(1,'ALLOW_JAVA_ENCODINGS_FEATURE', 'String'),
  \ javaapi#field(1,'DISALLOW_DOCTYPE_DECL_FEATURE', 'String'),
  \ javaapi#field(1,'CONTINUE_AFTER_FATAL_ERROR_FEATURE', 'String'),
  \ javaapi#field(1,'LOAD_DTD_GRAMMAR_FEATURE', 'String'),
  \ javaapi#field(1,'LOAD_EXTERNAL_DTD_FEATURE', 'String'),
  \ javaapi#field(1,'DEFER_NODE_EXPANSION_FEATURE', 'String'),
  \ javaapi#field(1,'CREATE_ENTITY_REF_NODES_FEATURE', 'String'),
  \ javaapi#field(1,'INCLUDE_IGNORABLE_WHITESPACE', 'String'),
  \ javaapi#field(1,'DEFAULT_ATTRIBUTE_VALUES_FEATURE', 'String'),
  \ javaapi#field(1,'VALIDATE_CONTENT_MODELS_FEATURE', 'String'),
  \ javaapi#field(1,'VALIDATE_DATATYPES_FEATURE', 'String'),
  \ javaapi#field(1,'BALANCE_SYNTAX_TREES', 'String'),
  \ javaapi#field(1,'NOTIFY_CHAR_REFS_FEATURE', 'String'),
  \ javaapi#field(1,'NOTIFY_BUILTIN_REFS_FEATURE', 'String'),
  \ javaapi#field(1,'STANDARD_URI_CONFORMANT_FEATURE', 'String'),
  \ javaapi#field(1,'GENERATE_SYNTHETIC_ANNOTATIONS_FEATURE', 'String'),
  \ javaapi#field(1,'VALIDATE_ANNOTATIONS_FEATURE', 'String'),
  \ javaapi#field(1,'HONOUR_ALL_SCHEMALOCATIONS_FEATURE', 'String'),
  \ javaapi#field(1,'NAMESPACE_GROWTH_FEATURE', 'String'),
  \ javaapi#field(1,'TOLERATE_DUPLICATES_FEATURE', 'String'),
  \ javaapi#field(1,'XINCLUDE_FEATURE', 'String'),
  \ javaapi#field(1,'XINCLUDE_FIXUP_BASE_URIS_FEATURE', 'String'),
  \ javaapi#field(1,'XINCLUDE_FIXUP_LANGUAGE_FEATURE', 'String'),
  \ javaapi#field(1,'USE_GRAMMAR_POOL_ONLY_FEATURE', 'String'),
  \ javaapi#field(1,'PARSER_SETTINGS', 'String'),
  \ javaapi#field(1,'XINCLUDE_AWARE', 'String'),
  \ javaapi#field(1,'IGNORE_SCHEMA_LOCATION_HINTS', 'String'),
  \ javaapi#field(1,'CHANGE_IGNORABLE_CHARACTERS_INTO_IGNORABLE_WHITESPACES', 'String'),
  \ javaapi#field(1,'XERCES_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,'CURRENT_ELEMENT_NODE_PROPERTY', 'String'),
  \ javaapi#field(1,'DOCUMENT_CLASS_NAME_PROPERTY', 'String'),
  \ javaapi#field(1,'SYMBOL_TABLE_PROPERTY', 'String'),
  \ javaapi#field(1,'ERROR_REPORTER_PROPERTY', 'String'),
  \ javaapi#field(1,'ERROR_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,'XINCLUDE_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,'XPOINTER_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,'ENTITY_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,'BUFFER_SIZE_PROPERTY', 'String'),
  \ javaapi#field(1,'SECURITY_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,'LOCALE_PROPERTY', 'String'),
  \ javaapi#field(1,'ENTITY_RESOLVER_PROPERTY', 'String'),
  \ javaapi#field(1,'XMLGRAMMAR_POOL_PROPERTY', 'String'),
  \ javaapi#field(1,'DATATYPE_VALIDATOR_FACTORY_PROPERTY', 'String'),
  \ javaapi#field(1,'DOCUMENT_SCANNER_PROPERTY', 'String'),
  \ javaapi#field(1,'DTD_SCANNER_PROPERTY', 'String'),
  \ javaapi#field(1,'DTD_PROCESSOR_PROPERTY', 'String'),
  \ javaapi#field(1,'VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,'DTD_VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,'SCHEMA_VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,'SCHEMA_LOCATION', 'String'),
  \ javaapi#field(1,'SCHEMA_NONS_LOCATION', 'String'),
  \ javaapi#field(1,'NAMESPACE_BINDER_PROPERTY', 'String'),
  \ javaapi#field(1,'NAMESPACE_CONTEXT_PROPERTY', 'String'),
  \ javaapi#field(1,'VALIDATION_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,'XPOINTER_SCHEMA_PROPERTY', 'String'),
  \ javaapi#field(1,'SCHEMA_DV_FACTORY_PROPERTY', 'String'),
  \ javaapi#field(1,'ELEMENT_PSVI', 'String'),
  \ javaapi#field(1,'ATTRIBUTE_PSVI', 'String'),
  \ javaapi#field(1,'ATTRIBUTE_DECLARED', 'String'),
  \ javaapi#field(1,'ENTITY_EXPANSION_LIMIT', 'String'),
  \ javaapi#field(1,'MAX_OCCUR_LIMIT', 'String'),
  \ javaapi#field(1,'TYPEINFO', 'String'),
  \ javaapi#field(1,'ID_ATTRIBUTE', 'String'),
  \ javaapi#field(1,'ENTITY_SKIPPED', 'String'),
  \ javaapi#field(1,'CHAR_REF_PROBABLE_WS', 'String'),
  \ javaapi#field(1,'LAST_ENTITY', 'String'),
  \ javaapi#field(1,'XML_VERSION_ERROR', 'short'),
  \ javaapi#field(1,'XML_VERSION_1_0', 'short'),
  \ javaapi#field(1,'XML_VERSION_1_1', 'short'),
  \ javaapi#field(1,'ANONYMOUS_TYPE_NAMESPACE', 'String'),
  \ javaapi#field(1,'SCHEMA_1_1_SUPPORT', 'boolean'),
  \ javaapi#field(1,'SCHEMA_VERSION_1_0', 'short'),
  \ javaapi#field(1,'SCHEMA_VERSION_1_0_EXTENDED', 'short'),
  \ javaapi#method(1,'getSAXFeatures(', ')', 'Enumeration'),
  \ javaapi#method(1,'getSAXProperties(', ')', 'Enumeration'),
  \ javaapi#method(1,'getXercesFeatures(', ')', 'Enumeration'),
  \ javaapi#method(1,'getXercesProperties(', ')', 'Enumeration'),
  \ javaapi#method(1,'main(', 'String[])', 'void'),
  \ ])

call javaapi#interface('ExternalSubsetResolver', 'XMLEntityResolver', [
  \ javaapi#method(0,'getExternalSubset(', 'XMLDTDDescription) throws XNIException, IOException', 'XMLInputSource'),
  \ ])

call javaapi#class('PropertyManager', '', [
  \ javaapi#field(1,'STAX_NOTATIONS', 'String'),
  \ javaapi#field(1,'STAX_ENTITIES', 'String'),
  \ javaapi#field(1,'CONTEXT_READER', 'int'),
  \ javaapi#field(1,'CONTEXT_WRITER', 'int'),
  \ javaapi#method(0,'PropertyManager(', 'int)', 'public'),
  \ javaapi#method(0,'PropertyManager(', 'PropertyManager)', 'public'),
  \ javaapi#method(0,'containsProperty(', 'String)', 'boolean'),
  \ javaapi#method(0,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#interface('RevalidationHandler', 'XMLDocumentFilter', [
  \ javaapi#method(0,'characterData(', 'String, Augmentations)', 'boolean'),
  \ ])

call javaapi#class('Version', '', [
  \ javaapi#field(1,'fVersion', 'String'),
  \ javaapi#method(0,'Version(', ')', 'public'),
  \ javaapi#method(1,'getVersion(', ')', 'String'),
  \ javaapi#method(1,'main(', 'String[])', 'void'),
  \ ])

call javaapi#class('XML11DTDScannerImpl', 'XMLDTDScannerImpl', [
  \ javaapi#method(0,'XML11DTDScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'XML11DTDScannerImpl(', 'SymbolTable, XMLErrorReporter, XMLEntityManager)', 'public'),
  \ ])

call javaapi#class('XML11DocumentScannerImpl', 'XMLDocumentScannerImpl', [
  \ javaapi#method(0,'XML11DocumentScannerImpl(', ')', 'public'),
  \ ])

call javaapi#class('XML11EntityScanner', 'XMLEntityScanner', [
  \ javaapi#method(0,'XML11EntityScanner(', ')', 'public'),
  \ javaapi#method(0,'peekChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,'scanChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,'scanNmtoken(', ') throws IOException', 'String'),
  \ javaapi#method(0,'scanName(', ') throws IOException', 'String'),
  \ javaapi#method(0,'scanNCName(', ') throws IOException', 'String'),
  \ javaapi#method(0,'scanQName(', 'QName) throws IOException', 'boolean'),
  \ javaapi#method(0,'scanContent(', 'XMLString) throws IOException', 'int'),
  \ javaapi#method(0,'scanLiteral(', 'int, XMLString) throws IOException', 'int'),
  \ javaapi#method(0,'scanData(', 'String, XMLStringBuffer) throws IOException', 'boolean'),
  \ javaapi#method(0,'skipChar(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,'skipSpaces(', ') throws IOException', 'boolean'),
  \ javaapi#method(0,'skipString(', 'String) throws IOException', 'boolean'),
  \ ])

call javaapi#class('NS11ContentDriver', 'ContentDriver', [
  \ ])

call javaapi#class('XML11NSDocumentScannerImpl', 'XML11DocumentScannerImpl', [
  \ javaapi#method(0,'XML11NSDocumentScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'setDTDValidator(', 'XMLDTDValidatorFilter)', 'void'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('XML11NamespaceBinder', 'XMLNamespaceBinder', [
  \ javaapi#method(0,'XML11NamespaceBinder(', ')', 'public'),
  \ ])

call javaapi#class('XMLDTDScannerImpl', 'XMLScanner', [
  \ javaapi#field(0,'fDTDHandler', 'XMLDTDHandler'),
  \ javaapi#method(0,'XMLDTDScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'XMLDTDScannerImpl(', 'SymbolTable, XMLErrorReporter, XMLEntityManager)', 'public'),
  \ javaapi#method(0,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,'scanDTDExternalSubset(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,'scanDTDInternalSubset(', 'boolean, boolean, boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,'setDTDHandler(', 'XMLDTDHandler)', 'void'),
  \ javaapi#method(0,'getDTDHandler(', ')', 'XMLDTDHandler'),
  \ javaapi#method(0,'setDTDContentModelHandler(', 'XMLDTDContentModelHandler)', 'void'),
  \ javaapi#method(0,'getDTDContentModelHandler(', ')', 'XMLDTDContentModelHandler'),
  \ javaapi#method(0,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endEntity(', 'String, Augmentations) throws XNIException, IOException', 'void'),
  \ javaapi#method(0,'getGrammar(', ')', 'DTDGrammar'),
  \ ])

call javaapi#interface('Driver', '', [
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('Element', '', [
  \ javaapi#field(0,'qname', 'QName'),
  \ javaapi#field(0,'fRawname', 'char[]'),
  \ javaapi#field(0,'next', 'Element'),
  \ javaapi#method(0,'Element(', 'QName, Element)', 'public'),
  \ ])

call javaapi#class('ElementStack', '', [
  \ javaapi#method(0,'ElementStack(', 'XMLDocumentFragmentScannerImpl)', 'public'),
  \ javaapi#method(0,'pushElement(', 'QName)', 'QName'),
  \ javaapi#method(0,'getNext(', ')', 'QName'),
  \ javaapi#method(0,'push(', ')', 'void'),
  \ javaapi#method(0,'matchElement(', 'QName)', 'boolean'),
  \ javaapi#method(0,'nextElement(', ')', 'QName'),
  \ javaapi#method(0,'popElement(', ')', 'QName'),
  \ javaapi#method(0,'reposition(', ')', 'void'),
  \ javaapi#method(0,'clear(', ')', 'void'),
  \ javaapi#method(0,'getLastPoppedElement(', ')', 'QName'),
  \ ])

call javaapi#class('ElementStack2', '', [
  \ javaapi#method(0,'ElementStack2(', 'XMLDocumentFragmentScannerImpl)', 'public'),
  \ javaapi#method(0,'resize(', ')', 'void'),
  \ javaapi#method(0,'matchElement(', 'QName)', 'boolean'),
  \ javaapi#method(0,'nextElement(', ')', 'QName'),
  \ javaapi#method(0,'getNext(', ')', 'QName'),
  \ javaapi#method(0,'popElement(', ')', 'int'),
  \ javaapi#method(0,'clear(', ')', 'void'),
  \ ])

call javaapi#class('FragmentContentDriver', 'Driver', [
  \ javaapi#method(0,'decideSubState(', ') throws IOException', 'void'),
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('XMLDocumentFragmentScannerImpl', 'XMLScanner', [
  \ javaapi#method(0,'XMLDocumentFragmentScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,'scanDocument(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,'getElementQName(', ')', 'QName'),
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,'setDocumentHandler(', 'XMLDocumentHandler)', 'void'),
  \ javaapi#method(0,'getDocumentHandler(', ')', 'XMLDocumentHandler'),
  \ javaapi#method(0,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,'getPIData(', ')', 'XMLStringBuffer'),
  \ javaapi#method(0,'getCharacterData(', ')', 'XMLString'),
  \ javaapi#method(0,'getComment(', ')', 'String'),
  \ javaapi#method(0,'hasAttributes(', ')', 'boolean'),
  \ javaapi#method(0,'getAttributeIterator(', ')', 'XMLAttributesIteratorImpl'),
  \ javaapi#method(0,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,'isStandAlone(', ')', 'boolean'),
  \ javaapi#method(0,'getEntityName(', ')', 'String'),
  \ javaapi#method(0,'getDriverName(', 'Driver)', 'String'),
  \ javaapi#method(0,'refresh(', ')', 'void'),
  \ javaapi#method(0,'refresh(', 'int)', 'void'),
  \ ])

call javaapi#class('ContentDriver', 'FragmentContentDriver', [
  \ ])

call javaapi#class('DTDDriver', 'Driver', [
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,'dispatch(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ ])

call javaapi#class('PrologDriver', 'Driver', [
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('TrailingMiscDriver', 'Driver', [
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('XMLDeclDriver', 'Driver', [
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('XMLDocumentScannerImpl', 'XMLDocumentFragmentScannerImpl', [
  \ javaapi#method(0,'XMLDocumentScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,'getScannetState(', ')', 'int'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'getDTDDecl(', ')', 'XMLStringBuffer'),
  \ javaapi#method(0,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,'refresh(', 'int)', 'void'),
  \ ])

call javaapi#interface('XMLEntityDescription', 'XMLResourceIdentifier', [
  \ javaapi#method(0,'setEntityName(', 'String)', 'void'),
  \ javaapi#method(0,'getEntityName(', ')', 'String'),
  \ ])

call javaapi#interface('XMLEntityHandler', '', [
  \ javaapi#method(0,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ ])

call javaapi#class('CharacterBuffer', '', [
  \ javaapi#method(0,'CharacterBuffer(', 'boolean, int)', 'public'),
  \ ])

call javaapi#class('CharacterBufferPool', '', [
  \ javaapi#method(0,'CharacterBufferPool(', 'int, int)', 'public'),
  \ javaapi#method(0,'CharacterBufferPool(', 'int, int, int)', 'public'),
  \ javaapi#method(0,'getBuffer(', 'boolean)', 'CharacterBuffer'),
  \ javaapi#method(0,'returnToPool(', 'CharacterBuffer)', 'void'),
  \ javaapi#method(0,'setExternalBufferSize(', 'int)', 'void'),
  \ ])

call javaapi#class('RewindableInputStream', 'InputStream', [
  \ javaapi#method(0,'RewindableInputStream(', 'XMLEntityManager, InputStream)', 'public'),
  \ javaapi#method(0,'setStartOffset(', 'int)', 'void'),
  \ javaapi#method(0,'rewind(', ')', 'void'),
  \ javaapi#method(0,'read(', ') throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[], int, int) throws IOException', 'int'),
  \ javaapi#method(0,'skip(', 'long) throws IOException', 'long'),
  \ javaapi#method(0,'available(', ') throws IOException', 'int'),
  \ javaapi#method(0,'mark(', 'int)', 'void'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'markSupported(', ')', 'boolean'),
  \ javaapi#method(0,'close(', ') throws IOException', 'void'),
  \ ])

call javaapi#class('XMLEntityManager', 'XMLEntityResolver', [
  \ javaapi#field(1,'DEFAULT_BUFFER_SIZE', 'int'),
  \ javaapi#field(1,'DEFAULT_XMLDECL_BUFFER_SIZE', 'int'),
  \ javaapi#field(1,'DEFAULT_INTERNAL_BUFFER_SIZE', 'int'),
  \ javaapi#method(0,'XMLEntityManager(', ')', 'public'),
  \ javaapi#method(0,'XMLEntityManager(', 'PropertyManager)', 'public'),
  \ javaapi#method(0,'XMLEntityManager(', 'XMLEntityManager)', 'public'),
  \ javaapi#method(0,'addInternalEntity(', 'String, String)', 'void'),
  \ javaapi#method(0,'addExternalEntity(', 'String, String, String, String) throws IOException', 'void'),
  \ javaapi#method(0,'addUnparsedEntity(', 'String, String, String, String, String)', 'void'),
  \ javaapi#method(0,'getEntityStore(', ')', 'XMLEntityStorage'),
  \ javaapi#method(0,'getEntityScanner(', ')', 'XMLEntityScanner'),
  \ javaapi#method(0,'setScannerVersion(', 'short)', 'void'),
  \ javaapi#method(0,'setupCurrentEntity(', 'String, XMLInputSource, boolean, boolean) throws IOException, XNIException', 'String'),
  \ javaapi#method(0,'isExternalEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,'isEntityDeclInExternalSubset(', 'String)', 'boolean'),
  \ javaapi#method(0,'setStandalone(', 'boolean)', 'void'),
  \ javaapi#method(0,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,'isDeclaredEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,'isUnparsedEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,'getCurrentResourceIdentifier(', ')', 'XMLResourceIdentifier'),
  \ javaapi#method(0,'setEntityHandler(', 'XMLEntityHandler)', 'void'),
  \ javaapi#method(0,'resolveEntityAsPerStax(', 'XMLResourceIdentifier) throws IOException', 'StaxXMLInputSource'),
  \ javaapi#method(0,'resolveEntity(', 'XMLResourceIdentifier) throws IOException, XNIException', 'XMLInputSource'),
  \ javaapi#method(0,'startEntity(', 'String, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'startDocumentEntity(', 'XMLInputSource) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'startDTDEntity(', 'XMLInputSource) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'startExternalSubset(', ')', 'void'),
  \ javaapi#method(0,'endExternalSubset(', ')', 'void'),
  \ javaapi#method(0,'startEntity(', 'String, XMLInputSource, boolean, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'getCurrentEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,'getTopLevelEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,'closeReaders(', ')', 'void'),
  \ javaapi#method(0,'endEntity(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(1,'expandSystemId(', 'String)', 'String'),
  \ javaapi#method(1,'absolutizeAgainstUserDir(', 'URI) throws MalformedURIException', 'void'),
  \ javaapi#method(1,'expandSystemId(', 'String, String)', 'String'),
  \ javaapi#method(1,'expandSystemId(', 'String, String, boolean) throws MalformedURIException', 'String'),
  \ javaapi#method(1,'setInstanceFollowRedirects(', 'HttpURLConnection, boolean)', 'void'),
  \ javaapi#method(0,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,'getExpandedSystemId(', ')', 'String'),
  \ javaapi#method(0,'getLiteralSystemId(', ')', 'String'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'test(', ')', 'void'),
  \ ])

call javaapi#class('1', 'EOFException', [
  \ javaapi#method(0,'fillInStackTrace(', ')', 'Throwable'),
  \ ])

call javaapi#class('XMLEntityScanner', 'XMLLocator', [
  \ javaapi#field(1,'VALID_NAMES', 'boolean[]'),
  \ javaapi#method(0,'XMLEntityScanner(', ')', 'public'),
  \ javaapi#method(0,'XMLEntityScanner(', 'PropertyManager, XMLEntityManager)', 'public'),
  \ javaapi#method(0,'setBufferSize(', 'int)', 'void'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'reset(', 'SymbolTable, XMLEntityManager, XMLErrorReporter)', 'void'),
  \ javaapi#method(0,'getXMLVersion(', ')', 'String'),
  \ javaapi#method(0,'setXMLVersion(', 'String)', 'void'),
  \ javaapi#method(0,'setCurrentEntity(', 'ScannedEntity)', 'void'),
  \ javaapi#method(0,'getCurrentEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,'getBaseSystemId(', ')', 'String'),
  \ javaapi#method(0,'setBaseSystemId(', 'String)', 'void'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'setLineNumber(', 'int)', 'void'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'setColumnNumber(', 'int)', 'void'),
  \ javaapi#method(0,'getCharacterOffset(', ')', 'int'),
  \ javaapi#method(0,'getExpandedSystemId(', ')', 'String'),
  \ javaapi#method(0,'setExpandedSystemId(', 'String)', 'void'),
  \ javaapi#method(0,'getLiteralSystemId(', ')', 'String'),
  \ javaapi#method(0,'setLiteralSystemId(', 'String)', 'void'),
  \ javaapi#method(0,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,'setPublicId(', 'String)', 'void'),
  \ javaapi#method(0,'setVersion(', 'String)', 'void'),
  \ javaapi#method(0,'getVersion(', ')', 'String'),
  \ javaapi#method(0,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,'setEncoding(', 'String) throws IOException', 'void'),
  \ javaapi#method(0,'isExternal(', ')', 'boolean'),
  \ javaapi#method(0,'getChar(', 'int) throws IOException', 'int'),
  \ javaapi#method(0,'peekChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,'scanChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,'scanNmtoken(', ') throws IOException', 'String'),
  \ javaapi#method(0,'scanName(', ') throws IOException', 'String'),
  \ javaapi#method(0,'scanQName(', 'QName) throws IOException', 'boolean'),
  \ javaapi#method(0,'scanContent(', 'XMLString) throws IOException', 'int'),
  \ javaapi#method(0,'scanLiteral(', 'int, XMLString) throws IOException', 'int'),
  \ javaapi#method(0,'scanData(', 'String, XMLStringBuffer) throws IOException', 'boolean'),
  \ javaapi#method(0,'skipChar(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,'isSpace(', 'char)', 'boolean'),
  \ javaapi#method(0,'skipSpaces(', ') throws IOException', 'boolean'),
  \ javaapi#method(0,'arrangeCapacity(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,'arrangeCapacity(', 'int, boolean) throws IOException', 'boolean'),
  \ javaapi#method(0,'skipString(', 'String) throws IOException', 'boolean'),
  \ javaapi#method(0,'skipString(', 'char[]) throws IOException', 'boolean'),
  \ javaapi#method(0,'registerListener(', 'XMLBufferListener)', 'void'),
  \ javaapi#method(0,'skipDeclSpaces(', ') throws IOException', 'boolean'),
  \ ])

call javaapi#class('1', 'ErrorHandlerProxy', [
  \ ])

call javaapi#class('XMLErrorReporter', 'XMLComponent', [
  \ javaapi#field(1,'SEVERITY_WARNING', 'short'),
  \ javaapi#field(1,'SEVERITY_ERROR', 'short'),
  \ javaapi#field(1,'SEVERITY_FATAL_ERROR', 'short'),
  \ javaapi#method(0,'XMLErrorReporter(', ')', 'public'),
  \ javaapi#method(0,'setLocale(', 'Locale)', 'void'),
  \ javaapi#method(0,'getLocale(', ')', 'Locale'),
  \ javaapi#method(0,'setDocumentLocator(', 'XMLLocator)', 'void'),
  \ javaapi#method(0,'putMessageFormatter(', 'String, MessageFormatter)', 'void'),
  \ javaapi#method(0,'getMessageFormatter(', 'String)', 'MessageFormatter'),
  \ javaapi#method(0,'removeMessageFormatter(', 'String)', 'MessageFormatter'),
  \ javaapi#method(0,'reportError(', 'String, String, Object[], short) throws XNIException', 'String'),
  \ javaapi#method(0,'reportError(', 'String, String, Object[], short, Exception) throws XNIException', 'String'),
  \ javaapi#method(0,'reportError(', 'XMLLocator, String, String, Object[], short) throws XNIException', 'String'),
  \ javaapi#method(0,'reportError(', 'XMLLocator, String, String, Object[], short, Exception) throws XNIException', 'String'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XNIException', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeature(', 'String) throws XMLConfigurationException', 'boolean'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,'getErrorHandler(', ')', 'XMLErrorHandler'),
  \ javaapi#method(0,'getSAXErrorHandler(', ')', 'ErrorHandler'),
  \ ])

call javaapi#class('NSContentDriver', 'ContentDriver', [
  \ ])

call javaapi#class('XMLNSDocumentScannerImpl', 'XMLDocumentScannerImpl', [
  \ javaapi#method(0,'XMLNSDocumentScannerImpl(', ')', 'public'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,'setDTDValidator(', 'XMLDTDValidatorFilter)', 'void'),
  \ ])

call javaapi#class('XMLNamespaceBinder', 'XMLDocumentFilter', [
  \ javaapi#method(0,'XMLNamespaceBinder(', ')', 'public'),
  \ javaapi#method(0,'setOnlyPassPrefixMappingEvents(', 'boolean)', 'void'),
  \ javaapi#method(0,'getOnlyPassPrefixMappingEvents(', ')', 'boolean'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XNIException', 'void'),
  \ javaapi#method(0,'getRecognizedFeatures(', ')', 'String[]'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getRecognizedProperties(', ')', 'String[]'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,'setDocumentHandler(', 'XMLDocumentHandler)', 'void'),
  \ javaapi#method(0,'getDocumentHandler(', ')', 'XMLDocumentHandler'),
  \ javaapi#method(0,'setDocumentSource(', 'XMLDocumentSource)', 'void'),
  \ javaapi#method(0,'getDocumentSource(', ')', 'XMLDocumentSource'),
  \ javaapi#method(0,'startGeneralEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'textDecl(', 'String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'startDocument(', 'XMLLocator, String, NamespaceContext, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'xmlDecl(', 'String, String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'doctypeDecl(', 'String, String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'comment(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'processingInstruction(', 'String, XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'startElement(', 'QName, XMLAttributes, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'emptyElement(', 'QName, XMLAttributes, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'characters(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'ignorableWhitespace(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endElement(', 'QName, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'startCDATA(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endCDATA(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endDocument(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endGeneralEntity(', 'String, Augmentations) throws XNIException', 'void'),
  \ ])

call javaapi#class('XMLScanner', 'XMLComponent', [
  \ javaapi#method(0,'XMLScanner(', ')', 'public'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'getFeature(', 'String) throws XMLConfigurationException', 'boolean'),
  \ javaapi#method(0,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,'scanPseudoAttribute(', 'boolean, XMLString) throws IOException, XNIException', 'String'),
  \ javaapi#method(0,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ ])

call javaapi#class('XMLStreamFilterImpl', 'XMLStreamReader', [
  \ javaapi#method(0,'XMLStreamFilterImpl(', 'XMLStreamReader, StreamFilter)', 'public'),
  \ javaapi#method(0,'next(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,'nextTag(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,'hasNext(', ') throws XMLStreamException', 'boolean'),
  \ javaapi#method(0,'close(', ') throws XMLStreamException', 'void'),
  \ javaapi#method(0,'getAttributeCount(', ')', 'int'),
  \ javaapi#method(0,'getAttributeName(', 'int)', 'QName'),
  \ javaapi#method(0,'getAttributeNamespace(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributePrefix(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeType(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeValue(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeValue(', 'String, String)', 'String'),
  \ javaapi#method(0,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,'getElementText(', ') throws XMLStreamException', 'String'),
  \ javaapi#method(0,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,'getEventType(', ')', 'int'),
  \ javaapi#method(0,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,'getLocation(', ')', 'Location'),
  \ javaapi#method(0,'getName(', ')', 'QName'),
  \ javaapi#method(0,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,'getNamespaceCount(', ')', 'int'),
  \ javaapi#method(0,'getNamespacePrefix(', 'int)', 'String'),
  \ javaapi#method(0,'getNamespaceURI(', ')', 'String'),
  \ javaapi#method(0,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,'getNamespaceURI(', 'String)', 'String'),
  \ javaapi#method(0,'getPIData(', ')', 'String'),
  \ javaapi#method(0,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,'getProperty(', 'String) throws IllegalArgumentException', 'Object'),
  \ javaapi#method(0,'getText(', ')', 'String'),
  \ javaapi#method(0,'getTextCharacters(', ')', 'char[]'),
  \ javaapi#method(0,'getTextCharacters(', 'int, char[], int, int) throws XMLStreamException', 'int'),
  \ javaapi#method(0,'getTextLength(', ')', 'int'),
  \ javaapi#method(0,'getTextStart(', ')', 'int'),
  \ javaapi#method(0,'getVersion(', ')', 'String'),
  \ javaapi#method(0,'hasName(', ')', 'boolean'),
  \ javaapi#method(0,'hasText(', ')', 'boolean'),
  \ javaapi#method(0,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,'isCharacters(', ')', 'boolean'),
  \ javaapi#method(0,'isEndElement(', ')', 'boolean'),
  \ javaapi#method(0,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,'isStartElement(', ')', 'boolean'),
  \ javaapi#method(0,'isWhiteSpace(', ')', 'boolean'),
  \ javaapi#method(0,'require(', 'int, String, String) throws XMLStreamException', 'void'),
  \ javaapi#method(0,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,'getAttributeLocalName(', 'int)', 'String'),
  \ ])

call javaapi#class('1', 'Location', [
  \ javaapi#method(0,'getLocationURI(', ')', 'String'),
  \ javaapi#method(0,'getCharacterOffset(', ')', 'int'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,'getSystemId(', ')', 'String'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ ])

call javaapi#class('XMLStreamReaderImpl', 'XMLStreamReader', [
  \ javaapi#method(0,'XMLStreamReaderImpl(', 'InputStream, PropertyManager) throws XMLStreamException', 'public'),
  \ javaapi#method(0,'getScanner(', ')', 'XMLDocumentScannerImpl'),
  \ javaapi#method(0,'XMLStreamReaderImpl(', 'String, PropertyManager) throws XMLStreamException', 'public'),
  \ javaapi#method(0,'XMLStreamReaderImpl(', 'InputStream, String, PropertyManager) throws XMLStreamException', 'public'),
  \ javaapi#method(0,'XMLStreamReaderImpl(', 'Reader, PropertyManager) throws XMLStreamException', 'public'),
  \ javaapi#method(0,'XMLStreamReaderImpl(', 'XMLInputSource, PropertyManager) throws XMLStreamException', 'public'),
  \ javaapi#method(0,'setInputSource(', 'XMLInputSource) throws XMLStreamException', 'void'),
  \ javaapi#method(0,'canReuse(', ')', 'boolean'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'close(', ') throws XMLStreamException', 'void'),
  \ javaapi#method(0,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,'getEventType(', ')', 'int'),
  \ javaapi#method(0,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,'getNamespaceURI(', ')', 'String'),
  \ javaapi#method(0,'getPIData(', ')', 'String'),
  \ javaapi#method(0,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,'getTextCharacters(', ')', 'char[]'),
  \ javaapi#method(0,'getTextLength(', ')', 'int'),
  \ javaapi#method(0,'getTextStart(', ')', 'int'),
  \ javaapi#method(0,'getValue(', ')', 'String'),
  \ javaapi#method(0,'getVersion(', ')', 'String'),
  \ javaapi#method(0,'hasAttributes(', ')', 'boolean'),
  \ javaapi#method(0,'hasName(', ')', 'boolean'),
  \ javaapi#method(0,'hasNext(', ') throws XMLStreamException', 'boolean'),
  \ javaapi#method(0,'hasValue(', ')', 'boolean'),
  \ javaapi#method(0,'isEndElement(', ')', 'boolean'),
  \ javaapi#method(0,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,'isStartElement(', ')', 'boolean'),
  \ javaapi#method(0,'isWhiteSpace(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,'getAttributeCount(', ')', 'int'),
  \ javaapi#method(0,'getAttributeName(', 'int)', 'QName'),
  \ javaapi#method(0,'getAttributeLocalName(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeNamespace(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributePrefix(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeQName(', 'int)', 'QName'),
  \ javaapi#method(0,'getAttributeType(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeValue(', 'int)', 'String'),
  \ javaapi#method(0,'getAttributeValue(', 'String, String)', 'String'),
  \ javaapi#method(0,'getElementText(', ') throws XMLStreamException', 'String'),
  \ javaapi#method(0,'getLocation(', ')', 'Location'),
  \ javaapi#method(0,'getName(', ')', 'QName'),
  \ javaapi#method(0,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,'getNamespaceCount(', ')', 'int'),
  \ javaapi#method(0,'getNamespacePrefix(', 'int)', 'String'),
  \ javaapi#method(0,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,'getProperty(', 'String) throws IllegalArgumentException', 'Object'),
  \ javaapi#method(0,'getText(', ')', 'String'),
  \ javaapi#method(0,'require(', 'int, String, String) throws XMLStreamException', 'void'),
  \ javaapi#method(0,'getTextCharacters(', 'int, char[], int, int) throws XMLStreamException', 'int'),
  \ javaapi#method(0,'hasText(', ')', 'boolean'),
  \ javaapi#method(0,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,'isCharacters(', ')', 'boolean'),
  \ javaapi#method(0,'nextTag(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,'convertXNIQNametoJavaxQName(', 'QName)', 'QName'),
  \ javaapi#method(0,'getNamespaceURI(', 'String)', 'String'),
  \ ])

call javaapi#class('XMLVersionDetector', '', [
  \ javaapi#method(0,'XMLVersionDetector(', ')', 'public'),
  \ javaapi#method(0,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,'startDocumentParsing(', 'XMLEntityHandler, short)', 'void'),
  \ javaapi#method(0,'determineDocVersion(', 'XMLInputSource) throws IOException', 'short'),
  \ ])

