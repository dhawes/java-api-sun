call javaapi#namespace('com.sun.xml.internal.fastinfoset')

call javaapi#class('AbstractResourceBundle', '', [
  \ javaapi#field(1,'LOCALE', 'String'),
  \ javaapi#method(0,'AbstractResourceBundle(', ')', 'public'),
  \ javaapi#method(0,'getString(', 'String, Object[])', 'String'),
  \ javaapi#method(1,'parseLocale(', 'String)', 'Locale'),
  \ javaapi#method(0,'getBundle(', ')', 'ResourceBundle'),
  \ javaapi#method(0,'getKeys(', ')', 'Enumeration'),
  \ ])

call javaapi#class('CommonResourceBundle', '', [
  \ javaapi#field(1,'BASE_NAME', 'String'),
  \ javaapi#method(1,'getInstance(', ')', 'CommonResourceBundle'),
  \ javaapi#method(1,'getInstance(', 'Locale)', 'CommonResourceBundle'),
  \ javaapi#method(0,'getBundle(', ')', 'ResourceBundle'),
  \ javaapi#method(0,'getBundle(', 'Locale)', 'ResourceBundle'),
  \ ])

call javaapi#class('EncodingAlgorithmInputStream', '', [
  \ javaapi#method(0,'read(', ') throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[]) throws IOException', 'int'),
  \ javaapi#method(0,'read(', 'byte[], int, int) throws IOException', 'int'),
  \ ])

call javaapi#class('Decoder', 'FastInfosetParser', [
  \ javaapi#field(1,'STRING_INTERNING_SYSTEM_PROPERTY', 'String'),
  \ javaapi#field(1,'BUFFER_SIZE_SYSTEM_PROPERTY', 'String'),
  \ javaapi#method(0,'setStringInterning(', 'boolean)', 'void'),
  \ javaapi#method(0,'getStringInterning(', ')', 'boolean'),
  \ javaapi#method(0,'setBufferSize(', 'int)', 'void'),
  \ javaapi#method(0,'getBufferSize(', ')', 'int'),
  \ javaapi#method(0,'setRegisteredEncodingAlgorithms(', 'Map)', 'void'),
  \ javaapi#method(0,'getRegisteredEncodingAlgorithms(', ')', 'Map'),
  \ javaapi#method(0,'setExternalVocabularies(', 'Map)', 'void'),
  \ javaapi#method(0,'getExternalVocabularies(', ')', 'Map'),
  \ javaapi#method(0,'setParseFragments(', 'boolean)', 'void'),
  \ javaapi#method(0,'getParseFragments(', ')', 'boolean'),
  \ javaapi#method(0,'setForceStreamClose(', 'boolean)', 'void'),
  \ javaapi#method(0,'getForceStreamClose(', ')', 'boolean'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'setVocabulary(', 'ParserVocabulary)', 'void'),
  \ javaapi#method(0,'setInputStream(', 'InputStream)', 'void'),
  \ javaapi#method(1,'isFastInfosetDocument(', 'InputStream) throws IOException', 'boolean'),
  \ ])

call javaapi#class('DecoderStateTables', '', [
  \ javaapi#field(1,'STATE_ILLEGAL', 'int'),
  \ javaapi#field(1,'STATE_UNSUPPORTED', 'int'),
  \ javaapi#field(1,'EII_NO_AIIS_INDEX_SMALL', 'int'),
  \ javaapi#field(1,'EII_AIIS_INDEX_SMALL', 'int'),
  \ javaapi#field(1,'EII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,'EII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,'EII_NAMESPACES', 'int'),
  \ javaapi#field(1,'EII_LITERAL', 'int'),
  \ javaapi#field(1,'CII_UTF8_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,'CII_UTF8_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,'CII_UTF8_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,'CII_UTF16_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,'CII_UTF16_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,'CII_UTF16_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,'CII_RA', 'int'),
  \ javaapi#field(1,'CII_EA', 'int'),
  \ javaapi#field(1,'CII_INDEX_SMALL', 'int'),
  \ javaapi#field(1,'CII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,'CII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,'CII_INDEX_LARGE_LARGE', 'int'),
  \ javaapi#field(1,'COMMENT_II', 'int'),
  \ javaapi#field(1,'PROCESSING_INSTRUCTION_II', 'int'),
  \ javaapi#field(1,'DOCUMENT_TYPE_DECLARATION_II', 'int'),
  \ javaapi#field(1,'UNEXPANDED_ENTITY_REFERENCE_II', 'int'),
  \ javaapi#field(1,'TERMINATOR_SINGLE', 'int'),
  \ javaapi#field(1,'TERMINATOR_DOUBLE', 'int'),
  \ javaapi#field(1,'AII_INDEX_SMALL', 'int'),
  \ javaapi#field(1,'AII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,'AII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,'AII_LITERAL', 'int'),
  \ javaapi#field(1,'AII_TERMINATOR_SINGLE', 'int'),
  \ javaapi#field(1,'AII_TERMINATOR_DOUBLE', 'int'),
  \ javaapi#field(1,'NISTRING_UTF8_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_UTF8_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_UTF8_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_UTF16_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_UTF16_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_UTF16_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,'NISTRING_RA', 'int'),
  \ javaapi#field(1,'NISTRING_EA', 'int'),
  \ javaapi#field(1,'NISTRING_INDEX_SMALL', 'int'),
  \ javaapi#field(1,'NISTRING_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,'NISTRING_INDEX_LARGE', 'int'),
  \ javaapi#field(1,'NISTRING_EMPTY', 'int'),
  \ javaapi#method(1,'DII(', 'int)', 'int'),
  \ javaapi#method(1,'EII(', 'int)', 'int'),
  \ javaapi#method(1,'AII(', 'int)', 'int'),
  \ javaapi#method(1,'NISTRING(', 'int)', 'int'),
  \ javaapi#method(1,'ISTRING(', 'int)', 'int'),
  \ javaapi#method(1,'ISTRING_PREFIX_NAMESPACE(', 'int)', 'int'),
  \ javaapi#method(1,'UTF8(', 'int)', 'int'),
  \ javaapi#method(1,'UTF8_NCNAME(', 'int)', 'int'),
  \ ])

call javaapi#class('1', '', [
  \ ])

call javaapi#class('EncodingBufferOutputStream', '', [
  \ javaapi#method(0,'write(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,'write(', 'byte[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,'getLength(', ')', 'int'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ ])

call javaapi#class('Encoder', '', [
  \ javaapi#field(1,'CHARACTER_ENCODING_SCHEME_SYSTEM_PROPERTY', 'String'),
  \ javaapi#method(0,'setIgnoreDTD(', 'boolean)', 'void'),
  \ javaapi#method(0,'getIgnoreDTD(', ')', 'boolean'),
  \ javaapi#method(0,'setIgnoreComments(', 'boolean)', 'void'),
  \ javaapi#method(0,'getIgnoreComments(', ')', 'boolean'),
  \ javaapi#method(0,'setIgnoreProcesingInstructions(', 'boolean)', 'void'),
  \ javaapi#method(0,'getIgnoreProcesingInstructions(', ')', 'boolean'),
  \ javaapi#method(0,'setIgnoreWhiteSpaceTextContent(', 'boolean)', 'void'),
  \ javaapi#method(0,'getIgnoreWhiteSpaceTextContent(', ')', 'boolean'),
  \ javaapi#method(0,'setCharacterEncodingScheme(', 'String)', 'void'),
  \ javaapi#method(0,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,'setRegisteredEncodingAlgorithms(', 'Map)', 'void'),
  \ javaapi#method(0,'getRegisteredEncodingAlgorithms(', ')', 'Map'),
  \ javaapi#method(0,'getMinCharacterContentChunkSize(', ')', 'int'),
  \ javaapi#method(0,'setMinCharacterContentChunkSize(', 'int)', 'void'),
  \ javaapi#method(0,'getMaxCharacterContentChunkSize(', ')', 'int'),
  \ javaapi#method(0,'setMaxCharacterContentChunkSize(', 'int)', 'void'),
  \ javaapi#method(0,'getCharacterContentChunkMapMemoryLimit(', ')', 'int'),
  \ javaapi#method(0,'setCharacterContentChunkMapMemoryLimit(', 'int)', 'void'),
  \ javaapi#method(0,'isCharacterContentChunkLengthMatchesLimit(', 'int)', 'boolean'),
  \ javaapi#method(0,'canAddCharacterContentToTable(', 'int, CharArrayIntMap)', 'boolean'),
  \ javaapi#method(0,'getMinAttributeValueSize(', ')', 'int'),
  \ javaapi#method(0,'setMinAttributeValueSize(', 'int)', 'void'),
  \ javaapi#method(0,'getMaxAttributeValueSize(', ')', 'int'),
  \ javaapi#method(0,'setMaxAttributeValueSize(', 'int)', 'void'),
  \ javaapi#method(0,'setAttributeValueMapMemoryLimit(', 'int)', 'void'),
  \ javaapi#method(0,'getAttributeValueMapMemoryLimit(', ')', 'int'),
  \ javaapi#method(0,'isAttributeValueLengthMatchesLimit(', 'int)', 'boolean'),
  \ javaapi#method(0,'canAddAttributeToTable(', 'int)', 'boolean'),
  \ javaapi#method(0,'setExternalVocabulary(', 'ExternalVocabulary)', 'void'),
  \ javaapi#method(0,'setVocabularyApplicationData(', 'VocabularyApplicationData)', 'void'),
  \ javaapi#method(0,'getVocabularyApplicationData(', ')', 'VocabularyApplicationData'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'setOutputStream(', 'OutputStream)', 'void'),
  \ javaapi#method(0,'setVocabulary(', 'SerializerVocabulary)', 'void'),
  \ javaapi#method(1,'getPrefixFromQualifiedName(', 'String)', 'String'),
  \ javaapi#method(1,'isWhiteSpace(', 'char[], int, int)', 'boolean'),
  \ javaapi#method(1,'isWhiteSpace(', 'String)', 'boolean'),
  \ ])

call javaapi#class('EncodingConstants', '', [
  \ javaapi#field(1,'XML_NAMESPACE_PREFIX', 'String'),
  \ javaapi#field(1,'XML_NAMESPACE_PREFIX_LENGTH', 'int'),
  \ javaapi#field(1,'XML_NAMESPACE_NAME', 'String'),
  \ javaapi#field(1,'XML_NAMESPACE_NAME_LENGTH', 'int'),
  \ javaapi#field(1,'XMLNS_NAMESPACE_PREFIX', 'String'),
  \ javaapi#field(1,'XMLNS_NAMESPACE_PREFIX_LENGTH', 'int'),
  \ javaapi#field(1,'XMLNS_NAMESPACE_NAME', 'String'),
  \ javaapi#field(1,'XMLNS_NAMESPACE_NAME_LENGTH', 'int'),
  \ javaapi#field(1,'DEFAULT_NAMESPACE_DECLARATION', 'QualifiedName'),
  \ javaapi#field(1,'DOCUMENT_ADDITIONAL_DATA_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_INITIAL_VOCABULARY_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_NOTATIONS_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_UNPARSED_ENTITIES_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_CHARACTER_ENCODING_SCHEME', 'int'),
  \ javaapi#field(1,'DOCUMENT_STANDALONE_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_VERSION_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_EXTERNAL_VOCABULARY_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_RESTRICTED_ALPHABETS_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_ENCODING_ALGORITHMS_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_PREFIXES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_NAMESPACE_NAMES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_LOCAL_NAMES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_OTHER_NCNAMES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_OTHER_URIS_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_ATTRIBUTE_VALUES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_CONTENT_CHARACTER_CHUNKS_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_OTHER_STRINGS_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_ELEMENT_NAME_SURROGATES_FLAG', 'int'),
  \ javaapi#field(1,'INITIAL_VOCABULARY_ATTRIBUTE_NAME_SURROGATES_FLAG', 'int'),
  \ javaapi#field(1,'NAME_SURROGATE_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,'NAME_SURROGATE_NAME_FLAG', 'int'),
  \ javaapi#field(1,'NOTATIONS', 'int'),
  \ javaapi#field(1,'NOTATIONS_MASK', 'int'),
  \ javaapi#field(1,'NOTATIONS_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'NOTATIONS_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'UNPARSED_ENTITIES', 'int'),
  \ javaapi#field(1,'UNPARSED_ENTITIES_MASK', 'int'),
  \ javaapi#field(1,'UNPARSED_ENTITIES_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'PROCESSING_INSTRUCTION', 'int'),
  \ javaapi#field(1,'PROCESSING_INSTRUCTION_MASK', 'int'),
  \ javaapi#field(1,'COMMENT', 'int'),
  \ javaapi#field(1,'COMMENT_MASK', 'int'),
  \ javaapi#field(1,'DOCUMENT_TYPE_DECLARATION', 'int'),
  \ javaapi#field(1,'DOCUMENT_TYPE_DECLARATION_MASK', 'int'),
  \ javaapi#field(1,'DOCUMENT_TYPE_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'DOCUMENT_TYPE_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'ELEMENT', 'int'),
  \ javaapi#field(1,'ELEMENT_ATTRIBUTE_FLAG', 'int'),
  \ javaapi#field(1,'ELEMENT_NAMESPACES_FLAG', 'int'),
  \ javaapi#field(1,'ELEMENT_LITERAL_QNAME_FLAG', 'int'),
  \ javaapi#field(1,'NAMESPACE_ATTRIBUTE', 'int'),
  \ javaapi#field(1,'NAMESPACE_ATTRIBUTE_MASK', 'int'),
  \ javaapi#field(1,'NAMESPACE_ATTRIBUTE_PREFIX_NAME_MASK', 'int'),
  \ javaapi#field(1,'NAMESPACE_ATTRIBUTE_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,'NAMESPACE_ATTRIBUTE_NAME_FLAG', 'int'),
  \ javaapi#field(1,'ATTRIBUTE_LITERAL_QNAME_FLAG', 'int'),
  \ javaapi#field(1,'LITERAL_QNAME_PREFIX_NAMESPACE_NAME_MASK', 'int'),
  \ javaapi#field(1,'LITERAL_QNAME_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,'LITERAL_QNAME_NAMESPACE_NAME_FLAG', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK_ADD_TO_TABLE_FLAG', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK_UTF_8_FLAG', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK_UTF_16_FLAG', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK_RESTRICTED_ALPHABET_FLAG', 'int'),
  \ javaapi#field(1,'CHARACTER_CHUNK_ENCODING_ALGORITHM_FLAG', 'int'),
  \ javaapi#field(1,'UNEXPANDED_ENTITY_REFERENCE', 'int'),
  \ javaapi#field(1,'UNEXPANDED_ENTITY_REFERENCE_MASK', 'int'),
  \ javaapi#field(1,'UNEXPANDED_ENTITY_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'UNEXPANDED_ENTITY_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,'NISTRING_ADD_TO_TABLE_FLAG', 'int'),
  \ javaapi#field(1,'NISTRING_UTF_8_FLAG', 'int'),
  \ javaapi#field(1,'NISTRING_UTF_16_FLAG', 'int'),
  \ javaapi#field(1,'NISTRING_RESTRICTED_ALPHABET_FLAG', 'int'),
  \ javaapi#field(1,'NISTRING_ENCODING_ALGORITHM_FLAG', 'int'),
  \ javaapi#field(1,'TERMINATOR', 'int'),
  \ javaapi#field(1,'DOUBLE_TERMINATOR', 'int'),
  \ javaapi#field(1,'ENCODING_ALGORITHM_BUILTIN_END', 'int'),
  \ javaapi#field(1,'ENCODING_ALGORITHM_APPLICATION_START', 'int'),
  \ javaapi#field(1,'ENCODING_ALGORITHM_APPLICATION_MAX', 'int'),
  \ javaapi#field(1,'RESTRICTED_ALPHABET_BUILTIN_END', 'int'),
  \ javaapi#field(1,'RESTRICTED_ALPHABET_APPLICATION_START', 'int'),
  \ javaapi#field(1,'RESTRICTED_ALPHABET_APPLICATION_MAX', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_MAXIMUM_LENGTH', 'long'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_2ND_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_2ND_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_2ND_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_2ND_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_2ND_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_5TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_5TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_5TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_5TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_5TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_7TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_7TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_7TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_7TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'OCTET_STRING_LENGTH_7TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_MAXIMUM_SIZE', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_2ND_BIT_LARGE_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_LARGE_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_3RD_BIT_LARGE_LARGE_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,'INTEGER_4TH_BIT_LARGE_MASK', 'int'),
  \ javaapi#method(0,'EncodingConstants(', ')', 'public'),
  \ ])

call javaapi#class('Notation', '', [
  \ javaapi#field(0,'name', 'String'),
  \ javaapi#field(0,'systemIdentifier', 'String'),
  \ javaapi#field(0,'publicIdentifier', 'String'),
  \ javaapi#method(0,'Notation(', 'String, String, String)', 'public'),
  \ ])

call javaapi#interface('OctetBufferListener', '', [
  \ javaapi#method(0,'onBeforeOctetBufferOverwrite(', ')', 'void'),
  \ ])

call javaapi#class('QualifiedName', '', [
  \ javaapi#field(0,'prefix', 'String'),
  \ javaapi#field(0,'namespaceName', 'String'),
  \ javaapi#field(0,'localName', 'String'),
  \ javaapi#field(0,'qName', 'String'),
  \ javaapi#field(0,'index', 'int'),
  \ javaapi#field(0,'prefixIndex', 'int'),
  \ javaapi#field(0,'namespaceNameIndex', 'int'),
  \ javaapi#field(0,'localNameIndex', 'int'),
  \ javaapi#field(0,'attributeId', 'int'),
  \ javaapi#field(0,'attributeHash', 'int'),
  \ javaapi#method(0,'QualifiedName(', ')', 'public'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, String)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, String)', 'void'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, String, int)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, String, int)', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, String, int, int, int, int)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, String, int, int, int, int)', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String)', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, int, int, int, char[])', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, int, int, int, char[])', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, int)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, int)', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String, String, int, int, int, int)', 'public'),
  \ javaapi#method(0,'set(', 'String, String, String, int, int, int, int)', 'QualifiedName'),
  \ javaapi#method(0,'QualifiedName(', 'String, String)', 'public'),
  \ javaapi#method(0,'set(', 'String, String)', 'QualifiedName'),
  \ javaapi#method(0,'getQName(', ')', 'QName'),
  \ javaapi#method(0,'getQNameString(', ')', 'String'),
  \ javaapi#method(0,'createAttributeValues(', 'int)', 'void'),
  \ ])

call javaapi#class('UnparsedEntity', '', [
  \ javaapi#field(0,'notationName', 'String'),
  \ javaapi#method(0,'UnparsedEntity(', 'String, String, String, String)', 'public'),
  \ ])

